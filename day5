# we see bot the approch
#brute force approch 
def check_duplicate(array):
    for i in range(len(array)):
        for j in range(i+1 ,len(array)-1):
            if array[i]==array[j]:
                return True
    return False
print(check_duplicate([2,4,5,6]))

def duplicate_array(array):
    ht = set()
    for n in array:
        if n in ht:
           return True
        ht.add(n)
    return False
print(duplicate_array([2,4,5,5,6]))

def besr_time(array):
    max_p =0
    l , r = 0 ,1
    if  l < r:
        profit = array[r]-array[l]
        max_p = max(max_p  , profit)
    else:
        l=r
    r+=1
    return max_p
print(besr_time([3,5,7,4,3]))
    
def check_max_sub(array):
    max_sum=array[0]
    cur_sum=0
    for i in array:
        if cur_sum<0:
            cur_sum = 0
        cur_sum+=i
        max_sum = max(max_sum , cur_sum)
    return max_sum
print(check_max_sub([ -1 ,3,5,6,3,1,2 ,-10]))

#three sum 
def three_sum(array):
    res = []
    array.sort()
    for  i ,a in enumerate(array):
        if i>0 and array[a]==array[i-1]:
            continue
        l , r = i+1 , len(array)-1
        while l< r :
            three_sum = a+array[l]+array[r]
            if three_sum >0:
                r-=1
            elif three_sum < 0:
                l+=1
            else:
                res.append([ a , array[l] , array[r]])
                l+=1
                while array[i]==array[i-1] and l<r:
                    l+=1
    return res
print(three_sum([3,5,4,-3,3,1,-1,-5]))

def most_water_cont(array):
    max_area = 0
    for i in range(len(array)-1):
        for j in range(i+1):
            area = min(array[i] ,array[j])*(j-i)
            max_area = max(area ,max_area)
    return max_area
print(most_water_cont([3,7,5,6,8,4]))

def check_tring(s ,t):
    if len(s)!=len(t):return False
    h ,r = {}, {}
    
    for i in rsnge(len(s)):
        h_hash = s[i]
        t_hash = t[i]
        if h_hash not in h:
           h[h_hash]=t_hash
        if t_hash not in r:
           r[t_hash]=h_hash
        if h[h_hash]!=t_hash and r[t_hash]!=h_hash:
            return False
    return True
    
def is_palim(str):
    mew_str = ''
    for i in reversed(range(len(s))):
        new_str+=str[i]
    if new_str==str:
        return True
    return False
